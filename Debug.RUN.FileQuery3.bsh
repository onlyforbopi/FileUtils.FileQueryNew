#!/bin/bash

#################################################################################################
#                                                                                                                                                                                                                                                                                           ##
#  Job: RUN.TM_Prcs_Files_in_Dir.bsh
#  Location: /home/tede/n55115/Joblib/Utils/file_processing/FILES_IN_DIR_PROCESS/TEMPLATE
#  
#  Usage: RUN.TM_Prcs_Files_in_Dir <dir> <rcrs>
#  Parameters: <dir> : Input directory.
#              <rcrs>: Flag for recursive process or not.
#                      Valid values: r or n respectively.
#
#  Calls: TM_Prcs_Files_in_Dir.bsh
#
#  Global constants: RCRS_YES="r"
#                    RCRS_NOT="n"
#
#  Function: TEMPLATE wrapper script that calls TM_Prcs_Files_in_Dir.bsh which:
#            - Iterates foreach file in directory <dir> (recursively or not based on <rcrs>).
#            - Processes each file.
#            - Writes output file (with proper name) in directory <dir>.
#
#  Output: - Output files in directory <dir>.
#          - Logs (outlist/errlist) in directory where job is runed.
#
#################################################################################################

# Environment variables.
# --> in .profile
source $HOME"/.profile"

# Parameters.
#
# DD_files.
declare        DIR_IN
#
declare        p_rcrs

# Constants.
readonly       ARGS_NBR=4
readonly       JOB_RUN="TM_Prcs_Files_in_Dir.bsh"
#
readonly       THIS_JOB_FULL=$0
readonly       THIS_JOB_SMPL=${0##*/}
readonly       JOB_OUT=$THIS_JOB_SMPL".outlist"
readonly       JOB_ERR=$THIS_JOB_SMPL".errlist"
#
declare -r -x  RCRS_YES="r"
declare -r -x  RCRS_NOT="n"

# Variables.
declare        step
declare        pgm
declare        pgm_full_path

# Functions.
function chk_abnd_silent()
{
  local     abnd
  
  abnd=$1
  
  if [ $abnd -ne 0 ]; then
    echo "Failed with status " $abnd; echo
    exit $abnd
  fi
  
  return 0
}

function chk_abnd()
{
  local     abnd
  
  abnd=$1
  date
  
  if [ $abnd -ne 0 ]; then
    echo "Failed with status " $abnd; echo
    exit $abnd
  else
    echo "Done"; echo
  fi
}

function house_keep()
{
  local     argc
  
  argc=$1
  chk_abnd_silent $? # Check return status.
  
  # If number of arguments is incorrect.
  if [ $argc -ne $ARGS_NBR ]; then
      echo "Wrong number of parameters = " $argc
      echo "Must be = " $ARGS_NBR
      echo "Usage: " $THIS_JOB_SMPL " <DIR_IN> r|n"
      exit 69
  fi
  
  # Fill variables.
  DIR_IN=$2
  pattern_sta=$3
  pattern_len=$4
  pattern=$5
  
  chk_abnd_silent $? # Check return status.
  
  if [ $p_rcrs != $RCRS_YES ] && [ $p_rcrs != $RCRS_NOT ]; then
     echo "Illegal 2nd parameter = " $p_rcrs ' . Must be: ' $RCRS_YES ' or ' $RCRS_NOT ' .'
     exit 68
  fi

  
  return 0
}

############################################################################
# Script start.
#
echo; echo $THIS_JOB_FULL " Started at ""$(date +"%Y-%m-%d %H:%M:%S::%N")"; echo
echo $THIS_JOB_FULL " Started at ""$(date +"%Y-%m-%d %H:%M:%S::%N")" > $JOB_OUT; echo >> $JOB_OUT

# Check arguments and construct file names.
house_keep $# $1 $2
chk_abnd_silent $? # Check return status.

############################################################################
#  Run job.
#
date
echo "Submit Job     " $JOB_RUN " ..."
echo "outlist_name = " $JOB_OUT
echo "errlist_name = " $JOB_ERR
echo
echo "DIR_IN = @"$DIR_IN"@"
echo "p_rcrs = @"$p_rcrs"@"
echo
#
date >> $JOB_OUT
echo "Submit Job     " $JOB_RUN " ..." >> $JOB_OUT
echo "outlist_name = " $JOB_OUT        >> $JOB_OUT
echo "errlist_name = " $JOB_ERR        >> $JOB_OUT
echo >> $JOB_OUT
echo "DIR_IN = @"$DIR_IN"@" >> $JOB_OUT
echo "p_rcrs = @"$p_rcrs"@"   >> $JOB_OUT
echo >> $JOB_OUT

# Run Job.
$JOB_RUN  $DIR_IN  $pattern_sta $pattern_len $pattern  1>>$JOB_OUT  2>$JOB_ERR
# Check return status.
chk_abnd $?
#

############################################################################
# Script end.
#
echo; echo >> $JOB_OUT; 
echo $THIS_JOB_FULL " Ended at   ""$(date +"%Y-%m-%d %H:%M:%S::%N")"; echo
echo $THIS_JOB_FULL " Ended at   ""$(date +"%Y-%m-%d %H:%M:%S::%N")" >> $JOB_OUT
chk_abnd $? # Check return status.

sleep 1s
touch $JOB_OUT $JOB_ERR
chk_abnd_silent $? # Check return status.
#

exit $?
#